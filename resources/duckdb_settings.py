#
# Copyright 2025, DuckDB Labs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import json, pyodbc

conn = pyodbc.connect("Driver={DuckDB Driver}")
cur = conn.cursor()
cur.execute("""
select
    name,
    value,
    input_type,
    scope,
    description
from duckdb_settings()
order by lower(name)
""")
tuples = cur.fetchall()

# prefix
print("""/*
 * Copyright 2025, DuckDB Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

use super::*;

// Generated by: python resources\duckdb_settings.py > src\common\all_settings.rs

pub fn all_settings() -> Vec<DuckDbSetting> {
    vec!(""")

for tup in tuples:
    print("""DuckDbSetting::new("{}", r#"{}"#, "{}", "{}", r#"{}"#),""".format(*tup))

# suffix
print(""")
}""")
